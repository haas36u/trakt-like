<?php

namespace AppBundle\Repository;
use Doctrine\ORM\NoResultException;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByMovieWithUsernameAndAvatar($movieId)
    {
        $query = $this->createQueryBuilder('c')
            ->leftJoin('c.user', 'u')
            ->addSelect('u.username, u.avatar')
            ->where('c.movie = :id')
            ->andWhere('c.published = 1')
            ->setParameter('id', $movieId)
            ->orderBy('c.createdAt', 'DESC')
            ->getQuery();

        return $query->getResult();
    }

    public function topCommentsfindByMovie($movieId)
    {
        $queryPositive = $this->createQueryBuilder('c')
            ->leftJoin('c.user', 'u')
            ->addSelect('u.username, u.avatar', 'u.id')
            ->leftJoin('u.notations', 'n')
            ->addSelect('n.mark')
            ->where('c.movie = :id')
            ->andWhere('c.published = 1')
            ->setParameter('id', $movieId)
            ->orderBy('n.mark', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleResult();

        $queryNegative = $this->createQueryBuilder('c')
            ->leftJoin('c.user', 'u')
            ->addSelect('u.username, u.avatar', 'u.id')
            ->leftJoin('u.notations', 'n')
            ->addSelect('n.mark')
            ->where('c.movie = :id')
            ->andWhere('c.published = 1')
            ->setParameter('id', $movieId)
            ->orderBy('n.mark', 'ASC')
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleResult();

        if($queryNegative['id'] == $queryPositive['id']){
            $queryNegative = null;
        }

        try {
            $results = [
                'positive' => $queryPositive,
                'negative' => $queryNegative
            ];

            return $results;
        } catch (NoResultException $e) {
            return null;
        }
    }
}
